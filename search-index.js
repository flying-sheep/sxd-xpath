var searchIndex = {};
searchIndex['evaluate'] = {"items":[],"paths":[]};
searchIndex['sxd_xpath'] = {"items":[[0,"","sxd_xpath","",null,null],[3,"EvaluationContext","","",null,null],[3,"Factory","","",null,null],[4,"LiteralValue","","",null,null],[13,"Boolean","","",0,null],[13,"Number","","",0,null],[13,"String","","",0,null],[4,"Value","","",null,null],[13,"Boolean","","",1,null],[13,"Number","","",1,null],[13,"String","","",1,null],[13,"Nodeset","","",1,null],[0,"nodeset","","",null,null],[3,"Namespace","sxd_xpath::nodeset","",null,null],[12,"parent","","",2,null],[12,"prefix","","",2,null],[12,"uri","","",2,null],[3,"Nodeset","","A collection of nodes",null,null],[3,"Iter","","",null,null],[3,"IntoIter","","",null,null],[4,"Node","","",null,null],[13,"Root","","",3,null],[13,"Element","","",3,null],[13,"Attribute","","",3,null],[13,"Text","","",3,null],[13,"Comment","","",3,null],[13,"Namespace","","",3,null],[13,"ProcessingInstruction","","",3,null],[11,"fmt","","",2,{"inputs":[{"name":"namespace"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",2,null],[11,"eq","","",2,{"inputs":[{"name":"namespace"},{"name":"namespace"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"namespace"},{"name":"namespace"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"namespace"}],"output":{"name":"namespace"}}],[11,"document","","",2,{"inputs":[{"name":"namespace"}],"output":{"name":"document"}}],[11,"parent","","",2,{"inputs":[{"name":"namespace"}],"output":{"name":"element"}}],[11,"prefix","","",2,{"inputs":[{"name":"namespace"}],"output":{"name":"str"}}],[11,"uri","","",2,{"inputs":[{"name":"namespace"}],"output":{"name":"str"}}],[11,"expanded_name","","",2,{"inputs":[{"name":"namespace"}],"output":{"name":"qname"}}],[11,"fmt","","",3,{"inputs":[{"name":"node"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",3,null],[11,"eq","","",3,{"inputs":[{"name":"node"},{"name":"node"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"node"},{"name":"node"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"node"}],"output":{"name":"node"}}],[11,"root","","",3,{"inputs":[{"name":"node"}],"output":{"name":"option"}}],[11,"element","","",3,{"inputs":[{"name":"node"}],"output":{"name":"option"}}],[11,"attribute","","",3,{"inputs":[{"name":"node"}],"output":{"name":"option"}}],[11,"text","","",3,{"inputs":[{"name":"node"}],"output":{"name":"option"}}],[11,"comment","","",3,{"inputs":[{"name":"node"}],"output":{"name":"option"}}],[11,"processing_instruction","","",3,{"inputs":[{"name":"node"}],"output":{"name":"option"}}],[11,"document","","",3,{"inputs":[{"name":"node"}],"output":{"name":"document"}}],[11,"prefixed_name","","",3,{"inputs":[{"name":"node"}],"output":{"name":"option"}}],[11,"expanded_name","","",3,{"inputs":[{"name":"node"}],"output":{"name":"option"}}],[11,"parent","","",3,{"inputs":[{"name":"node"}],"output":{"name":"option"}}],[11,"children","","",3,{"inputs":[{"name":"node"}],"output":{"name":"vec"}}],[11,"preceding_siblings","","",3,{"inputs":[{"name":"node"}],"output":{"name":"vec"}}],[11,"following_siblings","","",3,{"inputs":[{"name":"node"}],"output":{"name":"vec"}}],[11,"string_value","","",3,{"inputs":[{"name":"node"}],"output":{"name":"string"}}],[11,"from","","",3,{"inputs":[{"name":"node"},{"name":"root"}],"output":{"name":"node"}}],[11,"from","","",3,{"inputs":[{"name":"node"},{"name":"element"}],"output":{"name":"node"}}],[11,"from","","",3,{"inputs":[{"name":"node"},{"name":"attribute"}],"output":{"name":"node"}}],[11,"from","","",3,{"inputs":[{"name":"node"},{"name":"text"}],"output":{"name":"node"}}],[11,"from","","",3,{"inputs":[{"name":"node"},{"name":"comment"}],"output":{"name":"node"}}],[11,"from","","",3,{"inputs":[{"name":"node"},{"name":"processinginstruction"}],"output":{"name":"node"}}],[11,"into","sxd_document::dom","",4,{"inputs":[{"name":"childofroot"}],"output":{"name":"node"}}],[11,"into","","",5,{"inputs":[{"name":"childofelement"}],"output":{"name":"node"}}],[11,"into","","",6,{"inputs":[{"name":"parentofchild"}],"output":{"name":"node"}}],[11,"clone","sxd_xpath::nodeset","",7,{"inputs":[{"name":"nodeset"}],"output":{"name":"nodeset"}}],[11,"fmt","","",7,{"inputs":[{"name":"nodeset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"nodeset"},{"name":"nodeset"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"nodeset"},{"name":"nodeset"}],"output":{"name":"bool"}}],[11,"new","","",7,{"inputs":[{"name":"nodeset"}],"output":{"name":"nodeset"}}],[11,"add","","",7,{"inputs":[{"name":"nodeset"},{"name":"n"}],"output":null}],[11,"iter","","",7,{"inputs":[{"name":"nodeset"}],"output":{"name":"iter"}}],[11,"into_iter","","",7,{"inputs":[{"name":"nodeset"}],"output":{"name":"intoiter"}}],[11,"add_nodeset","","",7,{"inputs":[{"name":"nodeset"},{"name":"nodeset"}],"output":null}],[11,"size","","",7,{"inputs":[{"name":"nodeset"}],"output":{"name":"usize"}}],[11,"document_order_first","","",7,{"inputs":[{"name":"nodeset"}],"output":{"name":"option"}}],[11,"into_iter","","",7,{"inputs":[{"name":"nodeset"}],"output":{"name":"intoiter"}}],[11,"from_iter","","",7,{"inputs":[{"name":"nodeset"},{"name":"t"}],"output":{"name":"nodeset"}}],[11,"next","","",8,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",9,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[0,"axis","sxd_xpath","",null,null],[3,"Ancestor","sxd_xpath::axis","",null,null],[3,"AncestorOrSelf","","",null,null],[3,"Attribute","","",null,null],[3,"Namespace","","",null,null],[3,"Child","","",null,null],[3,"Descendant","","",null,null],[3,"DescendantOrSelf","","",null,null],[3,"Parent","","",null,null],[3,"PrecedingSibling","","",null,null],[3,"FollowingSibling","","",null,null],[3,"Preceding","","",null,null],[3,"Following","","",null,null],[3,"SelfAxis","","",null,null],[4,"PrincipalNodeType","","",null,null],[13,"Attribute","","",10,null],[13,"Element","","",10,null],[13,"Namespace","","",10,null],[6,"SubAxis","","",null,null],[8,"Axis","","A directed traversal of Nodes.",null,null],[10,"select_nodes","","Applies the given node test to the nodes selected by this axis,\nadding matching nodes to the nodeset.",11,{"inputs":[{"name":"axis"},{"name":"evaluationcontext"},{"name":"nodetest"},{"name":"nodeset"}],"output":null}],[11,"principal_node_type","","Describes what node type is naturally selected by this axis.",11,{"inputs":[{"name":"axis"}],"output":{"name":"principalnodetype"}}],[11,"fmt","","",12,{"inputs":[{"name":"ancestor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"select_nodes","","",12,{"inputs":[{"name":"ancestor"},{"name":"evaluationcontext"},{"name":"nodetest"},{"name":"nodeset"}],"output":null}],[11,"fmt","","",13,{"inputs":[{"name":"ancestororself"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"select_nodes","","",13,{"inputs":[{"name":"ancestororself"},{"name":"evaluationcontext"},{"name":"nodetest"},{"name":"nodeset"}],"output":null}],[11,"fmt","","",14,{"inputs":[{"name":"attribute"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"select_nodes","","",14,{"inputs":[{"name":"attribute"},{"name":"evaluationcontext"},{"name":"nodetest"},{"name":"nodeset"}],"output":null}],[11,"principal_node_type","","",14,{"inputs":[{"name":"attribute"}],"output":{"name":"principalnodetype"}}],[11,"fmt","","",15,{"inputs":[{"name":"namespace"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"select_nodes","","",15,{"inputs":[{"name":"namespace"},{"name":"evaluationcontext"},{"name":"nodetest"},{"name":"nodeset"}],"output":null}],[11,"principal_node_type","","",15,{"inputs":[{"name":"namespace"}],"output":{"name":"principalnodetype"}}],[11,"fmt","","",16,{"inputs":[{"name":"child"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"select_nodes","","",16,{"inputs":[{"name":"child"},{"name":"evaluationcontext"},{"name":"nodetest"},{"name":"nodeset"}],"output":null}],[11,"fmt","","",17,{"inputs":[{"name":"descendant"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"select_nodes","","",17,{"inputs":[{"name":"descendant"},{"name":"evaluationcontext"},{"name":"nodetest"},{"name":"nodeset"}],"output":null}],[11,"fmt","","",18,{"inputs":[{"name":"descendantorself"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"select_nodes","","",18,{"inputs":[{"name":"descendantorself"},{"name":"evaluationcontext"},{"name":"nodetest"},{"name":"nodeset"}],"output":null}],[11,"fmt","","",19,{"inputs":[{"name":"parent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"select_nodes","","",19,{"inputs":[{"name":"parent"},{"name":"evaluationcontext"},{"name":"nodetest"},{"name":"nodeset"}],"output":null}],[11,"fmt","","",20,{"inputs":[{"name":"precedingsibling"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"select_nodes","","",20,{"inputs":[{"name":"precedingsibling"},{"name":"evaluationcontext"},{"name":"nodetest"},{"name":"nodeset"}],"output":null}],[11,"fmt","","",21,{"inputs":[{"name":"followingsibling"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"select_nodes","","",21,{"inputs":[{"name":"followingsibling"},{"name":"evaluationcontext"},{"name":"nodetest"},{"name":"nodeset"}],"output":null}],[11,"fmt","","",22,{"inputs":[{"name":"preceding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"select_nodes","","",22,{"inputs":[{"name":"preceding"},{"name":"evaluationcontext"},{"name":"nodetest"},{"name":"nodeset"}],"output":null}],[11,"fmt","","",23,{"inputs":[{"name":"following"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"select_nodes","","",23,{"inputs":[{"name":"following"},{"name":"evaluationcontext"},{"name":"nodetest"},{"name":"nodeset"}],"output":null}],[11,"fmt","","",24,{"inputs":[{"name":"selfaxis"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"select_nodes","","",24,{"inputs":[{"name":"selfaxis"},{"name":"evaluationcontext"},{"name":"nodetest"},{"name":"nodeset"}],"output":null}],[0,"function","sxd_xpath","",null,null],[4,"ArgumentType","sxd_xpath::function","",null,null],[13,"Nodeset","","",25,null],[13,"Boolean","","",25,null],[13,"Number","","",25,null],[13,"String","","",25,null],[4,"Error","","",null,null],[13,"TooManyArguments","","",26,null],[12,"expected","sxd_xpath::function::Error","",26,null],[12,"actual","","",26,null],[13,"NotEnoughArguments","sxd_xpath::function","",26,null],[12,"expected","sxd_xpath::function::Error","",26,null],[12,"actual","","",26,null],[13,"WrongType","sxd_xpath::function","",26,null],[12,"expected","sxd_xpath::function::Error","",26,null],[12,"actual","","",26,null],[5,"register_core_functions","sxd_xpath::function","",null,{"inputs":[{"name":"functions"}],"output":null}],[8,"Function","","",null,null],[10,"evaluate","","",27,{"inputs":[{"name":"function"},{"name":"evaluationcontext"},{"name":"vec"}],"output":{"name":"result"}}],[11,"hash","","",25,null],[11,"eq","","",25,{"inputs":[{"name":"argumenttype"},{"name":"argumenttype"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"argumenttype"},{"name":"argumenttype"}],"output":{"name":"bool"}}],[11,"fmt","","",25,{"inputs":[{"name":"argumenttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"argumenttype"}],"output":{"name":"argumenttype"}}],[11,"hash","","",26,null],[11,"eq","","",26,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"fmt","","",26,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"description","","",26,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"fmt","","",26,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"parser","sxd_xpath","",null,null],[3,"Parser","sxd_xpath::parser","",null,null],[4,"ParseErr","","",null,null],[13,"EmptyPredicate","","",28,null],[13,"ExtraUnparsedTokens","","",28,null],[13,"RanOutOfInput","","",28,null],[13,"RightHandSideExpressionMissing","","",28,null],[13,"ArgumentMissing","","",28,null],[13,"TokenizerError","","",28,null],[13,"TrailingSlash","","",28,null],[13,"UnexpectedToken","","",28,null],[6,"ParseResult","","",null,null],[11,"new","","",29,{"inputs":[{"name":"parser"}],"output":{"name":"parser"}}],[11,"clone","","",28,{"inputs":[{"name":"parseerr"}],"output":{"name":"parseerr"}}],[11,"eq","","",28,{"inputs":[{"name":"parseerr"},{"name":"parseerr"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"parseerr"},{"name":"parseerr"}],"output":{"name":"bool"}}],[11,"fmt","","",28,{"inputs":[{"name":"parseerr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",28,{"inputs":[{"name":"parseerr"}],"output":{"name":"str"}}],[11,"fmt","","",28,{"inputs":[{"name":"parseerr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"parse","","",29,{"inputs":[{"name":"parser"},{"name":"i"}],"output":{"name":"parseresult"}}],[0,"tokenizer","sxd_xpath","",null,null],[3,"Tokenizer","sxd_xpath::tokenizer","",null,null],[3,"TokenDeabbreviator","","",null,null],[4,"TokenizerErr","","",null,null],[13,"ExpectedQuote","","",30,null],[13,"ExpectedNumber","","",30,null],[13,"ExpectedCurrentNode","","",30,null],[13,"ExpectedNamedOperator","","",30,null],[13,"ExpectedAxis","","",30,null],[13,"ExpectedAxisSeparator","","",30,null],[13,"ExpectedNodeTest","","",30,null],[13,"ExpectedPrefixedName","","",30,null],[13,"ExpectedNameTest","","",30,null],[13,"ExpectedVariableReference","","",30,null],[13,"ExpectedToken","","",30,null],[13,"ExpectedLeftParenthesis","","",30,null],[13,"NotTokenizingNamedOperators","","",30,null],[13,"MismatchedQuoteCharacters","","",30,null],[13,"UnableToCreateToken","","",30,null],[6,"TokenResult","","",null,null],[11,"clone","","",30,{"inputs":[{"name":"tokenizererr"}],"output":{"name":"tokenizererr"}}],[11,"eq","","",30,{"inputs":[{"name":"tokenizererr"},{"name":"tokenizererr"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"tokenizererr"},{"name":"tokenizererr"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"tokenizererr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",30,{"inputs":[{"name":"tokenizererr"}],"output":{"name":"str"}}],[11,"fmt","","",30,{"inputs":[{"name":"tokenizererr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"recoverable","","",30,{"inputs":[{"name":"tokenizererr"}],"output":{"name":"bool"}}],[11,"new","","",31,{"inputs":[{"name":"tokenizer"},{"name":"str"}],"output":{"name":"tokenizer"}}],[11,"has_more_tokens","","",31,{"inputs":[{"name":"tokenizer"}],"output":{"name":"bool"}}],[11,"next","","",31,{"inputs":[{"name":"tokenizer"}],"output":{"name":"option"}}],[11,"new","","",32,{"inputs":[{"name":"tokendeabbreviator"},{"name":"i"}],"output":{"name":"tokendeabbreviator"}}],[11,"next","","",32,{"inputs":[{"name":"tokendeabbreviator"}],"output":{"name":"option"}}],[6,"Functions","sxd_xpath","",null,null],[6,"Variables","","",null,null],[6,"Namespaces","","",null,null],[8,"Expression","","",null,null],[10,"evaluate","","",33,{"inputs":[{"name":"expression"},{"name":"evaluationcontext"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"literalvalue"}],"output":{"name":"literalvalue"}}],[11,"fmt","","",0,{"inputs":[{"name":"literalvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"literalvalue"},{"name":"literalvalue"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"literalvalue"},{"name":"literalvalue"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"value"}],"output":{"name":"value"}}],[11,"fmt","","",1,{"inputs":[{"name":"value"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"value"},{"name":"value"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"value"},{"name":"value"}],"output":{"name":"bool"}}],[11,"boolean","","",1,{"inputs":[{"name":"value"}],"output":{"name":"bool"}}],[11,"number","","",1,{"inputs":[{"name":"value"}],"output":{"name":"f64"}}],[11,"string","","",1,{"inputs":[{"name":"value"}],"output":{"name":"string"}}],[11,"clone","","",34,{"inputs":[{"name":"evaluationcontext"}],"output":{"name":"evaluationcontext"}}],[11,"new","","",34,{"inputs":[{"name":"evaluationcontext"},{"name":"n"},{"name":"functions"},{"name":"variables"},{"name":"namespaces"}],"output":{"name":"evaluationcontext"}}],[11,"new","","",35,{"inputs":[{"name":"factory"}],"output":{"name":"factory"}}],[11,"build","","",35,{"inputs":[{"name":"factory"},{"name":"str"}],"output":{"name":"parseresult"}}],[14,"nodeset!","","Convenience constructor for a nodeset",null,null]],"paths":[[4,"LiteralValue"],[4,"Value"],[3,"Namespace"],[4,"Node"],[4,"ChildOfRoot"],[4,"ChildOfElement"],[4,"ParentOfChild"],[3,"Nodeset"],[3,"Iter"],[3,"IntoIter"],[4,"PrincipalNodeType"],[8,"Axis"],[3,"Ancestor"],[3,"AncestorOrSelf"],[3,"Attribute"],[3,"Namespace"],[3,"Child"],[3,"Descendant"],[3,"DescendantOrSelf"],[3,"Parent"],[3,"PrecedingSibling"],[3,"FollowingSibling"],[3,"Preceding"],[3,"Following"],[3,"SelfAxis"],[4,"ArgumentType"],[4,"Error"],[8,"Function"],[4,"ParseErr"],[3,"Parser"],[4,"TokenizerErr"],[3,"Tokenizer"],[3,"TokenDeabbreviator"],[8,"Expression"],[3,"EvaluationContext"],[3,"Factory"]]};
searchIndex['sxd_document'] = {"items":[[0,"","sxd_document","",null,null],[3,"PrefixedName","","A prefixed name. This represents what is found in the string form\nof an XML document, and does not apply any namespace mapping.",null,null],[3,"QName","","A namespace-qualified name. This represents the name of an element\nor attribute *after* the prefix has been mapped to a specific\nnamespace.",null,null],[3,"Package","","The main entrypoint to an XML document",null,null],[0,"dom","","A traditional DOM tree interface for navigating and manipulating\nXML documents.",null,null],[3,"Document","sxd_document::dom","An XML document",null,null],[3,"Root","","The logical ancestor of every other node type",null,null],[3,"Namespace","","A mapping from a prefix to a URI",null,null],[3,"Element","","Elements are the workhorse of a document and may contain any type of\nnode, except for the Root node",null,null],[3,"Attribute","","Metadata about the current element",null,null],[3,"Text","","Textual data",null,null],[3,"Comment","","Information only relevant to humans",null,null],[3,"ProcessingInstruction","","Metadata relevant to the application, but not the XML processor or humans",null,null],[4,"ChildOfRoot","","Nodes that may occur as a child of the root node",null,null],[13,"Element","","",0,null],[13,"Comment","","",0,null],[13,"ProcessingInstruction","","",0,null],[4,"ChildOfElement","","Nodes that may occur as a child of an element node",null,null],[13,"Element","","",1,null],[13,"Text","","",1,null],[13,"Comment","","",1,null],[13,"ProcessingInstruction","","",1,null],[4,"ParentOfChild","","Nodes that may occur as the parent of a child node",null,null],[13,"Root","","",2,null],[13,"Element","","",2,null],[11,"clone","","",3,{"inputs":[{"name":"document"}],"output":{"name":"document"}}],[11,"root","","",3,{"inputs":[{"name":"document"}],"output":{"name":"root"}}],[11,"create_element","","",3,{"inputs":[{"name":"document"},{"name":"n"}],"output":{"name":"element"}}],[11,"create_text","","",3,{"inputs":[{"name":"document"},{"name":"str"}],"output":{"name":"text"}}],[11,"create_comment","","",3,{"inputs":[{"name":"document"},{"name":"str"}],"output":{"name":"comment"}}],[11,"create_processing_instruction","","",3,{"inputs":[{"name":"document"},{"name":"str"},{"name":"option"}],"output":{"name":"processinginstruction"}}],[11,"eq","","",3,{"inputs":[{"name":"document"},{"name":"document"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"document"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"root"}],"output":{"name":"root"}}],[11,"document","","",4,{"inputs":[{"name":"root"}],"output":{"name":"document"}}],[11,"eq","","",4,{"inputs":[{"name":"root"},{"name":"root"}],"output":{"name":"bool"}}],[11,"hash","","",4,{"inputs":[{"name":"root"},{"name":"h"}],"output":null}],[11,"append_child","","",4,{"inputs":[{"name":"root"},{"name":"c"}],"output":null}],[11,"children","","",4,{"inputs":[{"name":"root"}],"output":{"name":"vec"}}],[11,"fmt","","",4,{"inputs":[{"name":"root"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"prefix","","",5,{"inputs":[{"name":"namespace"}],"output":{"name":"str"}}],[11,"uri","","",5,{"inputs":[{"name":"namespace"}],"output":{"name":"str"}}],[11,"clone","","",6,{"inputs":[{"name":"element"}],"output":{"name":"element"}}],[11,"document","","",6,{"inputs":[{"name":"element"}],"output":{"name":"document"}}],[11,"eq","","",6,{"inputs":[{"name":"element"},{"name":"element"}],"output":{"name":"bool"}}],[11,"hash","","",6,{"inputs":[{"name":"element"},{"name":"h"}],"output":null}],[11,"name","","",6,{"inputs":[{"name":"element"}],"output":{"name":"qname"}}],[11,"set_name","","",6,{"inputs":[{"name":"element"},{"name":"n"}],"output":null}],[11,"set_default_namespace_uri","","",6,{"inputs":[{"name":"element"},{"name":"option"}],"output":null}],[11,"default_namespace_uri","","",6,{"inputs":[{"name":"element"}],"output":{"name":"option"}}],[11,"recursive_default_namespace_uri","","",6,{"inputs":[{"name":"element"}],"output":{"name":"option"}}],[11,"register_prefix","","Map a prefix to a namespace URI. Any existing prefix on this\nelement will be replaced.",6,{"inputs":[{"name":"element"},{"name":"str"},{"name":"str"}],"output":null}],[11,"namespace_uri_for_prefix","","Recursively resolve the prefix to a namespace URI.",6,{"inputs":[{"name":"element"},{"name":"str"}],"output":{"name":"option"}}],[11,"prefix_for_namespace_uri","","Recursively find a prefix for the namespace URI. Since\nmultiple prefixes may map to the same URI, `preferred` can be\nprovided to select a specific prefix, if it is valid.",6,{"inputs":[{"name":"element"},{"name":"str"},{"name":"option"}],"output":{"name":"option"}}],[11,"namespaces_in_scope","","Retrieve all namespaces that are in scope, recursively walking\nup the document tree.",6,{"inputs":[{"name":"element"}],"output":{"name":"vec"}}],[11,"preferred_prefix","","",6,{"inputs":[{"name":"element"}],"output":{"name":"option"}}],[11,"set_preferred_prefix","","",6,{"inputs":[{"name":"element"},{"name":"option"}],"output":null}],[11,"parent","","",6,{"inputs":[{"name":"element"}],"output":{"name":"option"}}],[11,"append_child","","",6,{"inputs":[{"name":"element"},{"name":"c"}],"output":null}],[11,"children","","",6,{"inputs":[{"name":"element"}],"output":{"name":"vec"}}],[11,"preceding_siblings","","",6,{"inputs":[{"name":"element"}],"output":{"name":"vec"}}],[11,"following_siblings","","",6,{"inputs":[{"name":"element"}],"output":{"name":"vec"}}],[11,"attribute","","",6,{"inputs":[{"name":"element"},{"name":"n"}],"output":{"name":"option"}}],[11,"attributes","","",6,{"inputs":[{"name":"element"}],"output":{"name":"vec"}}],[11,"set_attribute_value","","",6,{"inputs":[{"name":"element"},{"name":"n"},{"name":"str"}],"output":{"name":"attribute"}}],[11,"attribute_value","","",6,{"inputs":[{"name":"element"},{"name":"n"}],"output":{"name":"option"}}],[11,"fmt","","",6,{"inputs":[{"name":"element"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"attribute"}],"output":{"name":"attribute"}}],[11,"document","","",7,{"inputs":[{"name":"attribute"}],"output":{"name":"document"}}],[11,"eq","","",7,{"inputs":[{"name":"attribute"},{"name":"attribute"}],"output":{"name":"bool"}}],[11,"hash","","",7,{"inputs":[{"name":"attribute"},{"name":"h"}],"output":null}],[11,"name","","",7,{"inputs":[{"name":"attribute"}],"output":{"name":"qname"}}],[11,"value","","",7,{"inputs":[{"name":"attribute"}],"output":{"name":"str"}}],[11,"preferred_prefix","","",7,{"inputs":[{"name":"attribute"}],"output":{"name":"option"}}],[11,"set_preferred_prefix","","",7,{"inputs":[{"name":"attribute"},{"name":"option"}],"output":null}],[11,"parent","","",7,{"inputs":[{"name":"attribute"}],"output":{"name":"option"}}],[11,"fmt","","",7,{"inputs":[{"name":"attribute"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"document","","",8,{"inputs":[{"name":"text"}],"output":{"name":"document"}}],[11,"eq","","",8,{"inputs":[{"name":"text"},{"name":"text"}],"output":{"name":"bool"}}],[11,"hash","","",8,{"inputs":[{"name":"text"},{"name":"h"}],"output":null}],[11,"text","","",8,{"inputs":[{"name":"text"}],"output":{"name":"str"}}],[11,"set_text","","",8,{"inputs":[{"name":"text"},{"name":"str"}],"output":null}],[11,"parent","","",8,{"inputs":[{"name":"text"}],"output":{"name":"option"}}],[11,"preceding_siblings","","",8,{"inputs":[{"name":"text"}],"output":{"name":"vec"}}],[11,"following_siblings","","",8,{"inputs":[{"name":"text"}],"output":{"name":"vec"}}],[11,"fmt","","",8,{"inputs":[{"name":"text"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"comment"}],"output":{"name":"comment"}}],[11,"document","","",9,{"inputs":[{"name":"comment"}],"output":{"name":"document"}}],[11,"eq","","",9,{"inputs":[{"name":"comment"},{"name":"comment"}],"output":{"name":"bool"}}],[11,"hash","","",9,{"inputs":[{"name":"comment"},{"name":"h"}],"output":null}],[11,"text","","",9,{"inputs":[{"name":"comment"}],"output":{"name":"str"}}],[11,"set_text","","",9,{"inputs":[{"name":"comment"},{"name":"str"}],"output":null}],[11,"parent","","",9,{"inputs":[{"name":"comment"}],"output":{"name":"option"}}],[11,"preceding_siblings","","",9,{"inputs":[{"name":"comment"}],"output":{"name":"vec"}}],[11,"following_siblings","","",9,{"inputs":[{"name":"comment"}],"output":{"name":"vec"}}],[11,"fmt","","",9,{"inputs":[{"name":"comment"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"processinginstruction"}],"output":{"name":"processinginstruction"}}],[11,"document","","",10,{"inputs":[{"name":"processinginstruction"}],"output":{"name":"document"}}],[11,"eq","","",10,{"inputs":[{"name":"processinginstruction"},{"name":"processinginstruction"}],"output":{"name":"bool"}}],[11,"hash","","",10,{"inputs":[{"name":"processinginstruction"},{"name":"h"}],"output":null}],[11,"target","","",10,{"inputs":[{"name":"processinginstruction"}],"output":{"name":"str"}}],[11,"value","","",10,{"inputs":[{"name":"processinginstruction"}],"output":{"name":"option"}}],[11,"set_target","","",10,{"inputs":[{"name":"processinginstruction"},{"name":"str"}],"output":null}],[11,"set_value","","",10,{"inputs":[{"name":"processinginstruction"},{"name":"option"}],"output":null}],[11,"parent","","",10,{"inputs":[{"name":"processinginstruction"}],"output":{"name":"option"}}],[11,"preceding_siblings","","",10,{"inputs":[{"name":"processinginstruction"}],"output":{"name":"vec"}}],[11,"following_siblings","","",10,{"inputs":[{"name":"processinginstruction"}],"output":{"name":"vec"}}],[11,"fmt","","",10,{"inputs":[{"name":"processinginstruction"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"childofroot"},{"name":"childofroot"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"childofroot"},{"name":"childofroot"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"childofroot"}],"output":{"name":"childofroot"}}],[11,"fmt","","",0,{"inputs":[{"name":"childofroot"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"element","","",0,{"inputs":[{"name":"childofroot"}],"output":{"name":"option"}}],[11,"comment","","",0,{"inputs":[{"name":"childofroot"}],"output":{"name":"option"}}],[11,"processing_instruction","","",0,{"inputs":[{"name":"childofroot"}],"output":{"name":"option"}}],[11,"eq","","",1,{"inputs":[{"name":"childofelement"},{"name":"childofelement"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"childofelement"},{"name":"childofelement"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"childofelement"}],"output":{"name":"childofelement"}}],[11,"fmt","","",1,{"inputs":[{"name":"childofelement"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"element","","",1,{"inputs":[{"name":"childofelement"}],"output":{"name":"option"}}],[11,"text","","",1,{"inputs":[{"name":"childofelement"}],"output":{"name":"option"}}],[11,"comment","","",1,{"inputs":[{"name":"childofelement"}],"output":{"name":"option"}}],[11,"processing_instruction","","",1,{"inputs":[{"name":"childofelement"}],"output":{"name":"option"}}],[11,"eq","","",2,{"inputs":[{"name":"parentofchild"},{"name":"parentofchild"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"parentofchild"},{"name":"parentofchild"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"parentofchild"}],"output":{"name":"parentofchild"}}],[11,"fmt","","",2,{"inputs":[{"name":"parentofchild"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"root","","",2,{"inputs":[{"name":"parentofchild"}],"output":{"name":"option"}}],[11,"element","","",2,{"inputs":[{"name":"parentofchild"}],"output":{"name":"option"}}],[11,"from","","",0,{"inputs":[{"name":"childofroot"},{"name":"element"}],"output":{"name":"childofroot"}}],[11,"from","","",0,{"inputs":[{"name":"childofroot"},{"name":"comment"}],"output":{"name":"childofroot"}}],[11,"from","","",0,{"inputs":[{"name":"childofroot"},{"name":"processinginstruction"}],"output":{"name":"childofroot"}}],[11,"from","","",1,{"inputs":[{"name":"childofelement"},{"name":"element"}],"output":{"name":"childofelement"}}],[11,"from","","",1,{"inputs":[{"name":"childofelement"},{"name":"text"}],"output":{"name":"childofelement"}}],[11,"from","","",1,{"inputs":[{"name":"childofelement"},{"name":"comment"}],"output":{"name":"childofelement"}}],[11,"from","","",1,{"inputs":[{"name":"childofelement"},{"name":"processinginstruction"}],"output":{"name":"childofelement"}}],[11,"from","","",1,{"inputs":[{"name":"childofelement"},{"name":"childofroot"}],"output":{"name":"childofelement"}}],[0,"parser","sxd_document","Converts XML strings into a DOM structure",null,null],[3,"Parser","sxd_document::parser","Parses XML strings",null,null],[4,"Error","","",null,null],[13,"Expected","","",11,null],[13,"ExpectedAttribute","","",11,null],[13,"ExpectedAttributeValue","","",11,null],[13,"ExpectedCData","","",11,null],[13,"ExpectedCharacterData","","",11,null],[13,"ExpectedComment","","",11,null],[13,"ExpectedCommentBody","","",11,null],[13,"ExpectedElement","","",11,null],[13,"ExpectedElementName","","",11,null],[13,"ExpectedElementEnd","","",11,null],[13,"ExpectedElementSelfClosed","","",11,null],[13,"ExpectedProcessingInstruction","","",11,null],[13,"ExpectedProcessingInstructionTarget","","",11,null],[13,"ExpectedProcessingInstructionValue","","",11,null],[13,"ExpectedVersionNumber","","",11,null],[13,"ExpectedEncoding","","",11,null],[13,"ExpectedWhitespace","","",11,null],[13,"ExpectedClosingQuote","","",11,null],[13,"ExpectedOpeningQuote","","",11,null],[13,"ExpectedDecimalReferenceValue","","",11,null],[13,"ExpectedHexReferenceValue","","",11,null],[13,"ExpectedNamedReferenceValue","","",11,null],[13,"ExpectedDecimalReference","","",11,null],[13,"ExpectedHexReference","","",11,null],[13,"ExpectedNamedReference","","",11,null],[13,"InvalidProcessingInstructionTarget","","",11,null],[13,"MismatchedElementEndName","","",11,null],[13,"InvalidDecimalReference","","",11,null],[13,"InvalidHexReference","","",11,null],[13,"UnknownNamedReference","","",11,null],[13,"DuplicateAttribute","","",11,null],[13,"RedefinedNamespace","","",11,null],[13,"RedefinedDefaultNamespace","","",11,null],[13,"EmptyNamespace","","",11,null],[13,"UnknownNamespacePrefix","","",11,null],[8,"XmlParseExt","","Common reusable XML parsing methods",null,null],[10,"consume_space","","Parse XML whitespace",12,{"inputs":[{"name":"xmlparseext"}],"output":{"name":"progress"}}],[10,"consume_decimal_chars","","Parse XML decimal characters",12,{"inputs":[{"name":"xmlparseext"}],"output":{"name":"progress"}}],[10,"consume_ncname","","Parse an XML [NCName](http://www.w3.org/TR/REC-xml-names/#NT-NCName)",12,{"inputs":[{"name":"xmlparseext"}],"output":{"name":"progress"}}],[10,"consume_prefixed_name","","Parse an XML [prefixed name](http://www.w3.org/TR/REC-xml-names/#NT-QName)",12,{"inputs":[{"name":"xmlparseext"}],"output":{"name":"progress"}}],[11,"eq","","",11,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"fmt","","",11,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"recoverable","","",11,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"consume_space","peresil","",13,{"inputs":[{"name":"stringpoint"}],"output":{"name":"progress"}}],[11,"consume_decimal_chars","","",13,{"inputs":[{"name":"stringpoint"}],"output":{"name":"progress"}}],[11,"consume_ncname","","",13,{"inputs":[{"name":"stringpoint"}],"output":{"name":"progress"}}],[11,"consume_prefixed_name","","",13,{"inputs":[{"name":"stringpoint"}],"output":{"name":"progress"}}],[11,"new","sxd_document::parser","",14,{"inputs":[{"name":"parser"}],"output":{"name":"parser"}}],[11,"parse","","Parses a string into a DOM. On failure, the location of the\nparsing failure will be returned.",14,{"inputs":[{"name":"parser"},{"name":"str"}],"output":{"name":"result"}}],[0,"writer","sxd_document","Formats a DOM structure to a Write",null,null],[5,"format_document","sxd_document::writer","Formats a document into a Write",null,{"inputs":[{"name":"document"},{"name":"w"}],"output":{"name":"result"}}],[8,"XmlChar","sxd_document","Predicates used when parsing an characters in an XML document.",null,null],[10,"is_name_start_char","","Is this a [NameStartChar](http://www.w3.org/TR/xml/#NT-NameStartChar)?",15,{"inputs":[{"name":"xmlchar"}],"output":{"name":"bool"}}],[10,"is_name_char","","Is this a [NameChar](http://www.w3.org/TR/xml/#NT-NameChar)?",15,{"inputs":[{"name":"xmlchar"}],"output":{"name":"bool"}}],[10,"is_ncname_start_char","","Does this start a [NCName](http://www.w3.org/TR/REC-xml-names/#NT-NCName)?",15,{"inputs":[{"name":"xmlchar"}],"output":{"name":"bool"}}],[10,"is_ncname_char","","Is this a component of a [NCName](http://www.w3.org/TR/REC-xml-names/#NT-NCName)?",15,{"inputs":[{"name":"xmlchar"}],"output":{"name":"bool"}}],[10,"is_space_char","","Is this an [XML space](http://www.w3.org/TR/xml/#NT-S)?",15,{"inputs":[{"name":"xmlchar"}],"output":{"name":"bool"}}],[10,"is_decimal_char","","",15,{"inputs":[{"name":"xmlchar"}],"output":{"name":"bool"}}],[10,"is_hex_char","","",15,{"inputs":[{"name":"xmlchar"}],"output":{"name":"bool"}}],[10,"is_encoding_start_char","","",15,{"inputs":[{"name":"xmlchar"}],"output":{"name":"bool"}}],[10,"is_encoding_rest_char","","",15,{"inputs":[{"name":"xmlchar"}],"output":{"name":"bool"}}],[11,"cmp","","",16,{"inputs":[{"name":"prefixedname"},{"name":"prefixedname"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"prefixedname"},{"name":"prefixedname"}],"output":{"name":"option"}}],[11,"lt","","",16,{"inputs":[{"name":"prefixedname"},{"name":"prefixedname"}],"output":{"name":"bool"}}],[11,"le","","",16,{"inputs":[{"name":"prefixedname"},{"name":"prefixedname"}],"output":{"name":"bool"}}],[11,"gt","","",16,{"inputs":[{"name":"prefixedname"},{"name":"prefixedname"}],"output":{"name":"bool"}}],[11,"ge","","",16,{"inputs":[{"name":"prefixedname"},{"name":"prefixedname"}],"output":{"name":"bool"}}],[11,"eq","","",16,{"inputs":[{"name":"prefixedname"},{"name":"prefixedname"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"prefixedname"},{"name":"prefixedname"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"prefixedname"}],"output":{"name":"prefixedname"}}],[11,"fmt","","",16,{"inputs":[{"name":"prefixedname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a `PrefixedName` without a prefix",16,{"inputs":[{"name":"prefixedname"},{"name":"str"}],"output":{"name":"prefixedname"}}],[11,"with_prefix","","Create a `PrefixedName` without an optional prefix",16,{"inputs":[{"name":"prefixedname"},{"name":"option"},{"name":"str"}],"output":{"name":"prefixedname"}}],[11,"prefix","","",16,{"inputs":[{"name":"prefixedname"}],"output":{"name":"option"}}],[11,"local_part","","",16,{"inputs":[{"name":"prefixedname"}],"output":{"name":"str"}}],[11,"eq","","",17,{"inputs":[{"name":"qname"},{"name":"qname"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"qname"},{"name":"qname"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"qname"}],"output":{"name":"qname"}}],[11,"fmt","","",17,{"inputs":[{"name":"qname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a `QName` without a namespace",17,{"inputs":[{"name":"qname"},{"name":"str"}],"output":{"name":"qname"}}],[11,"with_namespace_uri","","Create a `QName` with an optional namespace",17,{"inputs":[{"name":"qname"},{"name":"option"},{"name":"str"}],"output":{"name":"qname"}}],[11,"namespace_uri","","",17,{"inputs":[{"name":"qname"}],"output":{"name":"option"}}],[11,"local_part","","",17,{"inputs":[{"name":"qname"}],"output":{"name":"str"}}],[11,"from","","",17,null],[11,"from","","",17,{"inputs":[{"name":"qname"},{"name":"str"}],"output":{"name":"qname"}}],[11,"new","","",18,{"inputs":[{"name":"package"}],"output":{"name":"package"}}],[11,"as_document","","",18,{"inputs":[{"name":"package"}],"output":{"name":"document"}}],[11,"eq","","",18,{"inputs":[{"name":"package"},{"name":"package"}],"output":{"name":"bool"}}],[11,"fmt","","",18,{"inputs":[{"name":"package"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[4,"ChildOfRoot"],[4,"ChildOfElement"],[4,"ParentOfChild"],[3,"Document"],[3,"Root"],[3,"Namespace"],[3,"Element"],[3,"Attribute"],[3,"Text"],[3,"Comment"],[3,"ProcessingInstruction"],[4,"Error"],[8,"XmlParseExt"],[3,"StringPoint"],[3,"Parser"],[8,"XmlChar"],[3,"PrefixedName"],[3,"QName"],[3,"Package"]]};
searchIndex['getopts'] = {"items":[[0,"","getopts","Simple getopt alternative.",null,null],[3,"Options","","A description of the options that a program can handle.",null,null],[3,"Matches","","The result of checking command line arguments. Contains a vector\nof matches and a vector of free strings.",null,null],[12,"free","","Free string fragments",0,null],[4,"ParsingStyle","","What parsing style to use when parsing arguments.",null,null],[13,"FloatingFrees","","Flags and \"free\" arguments can be freely inter-mixed.",1,null],[13,"StopAtFirstFree","","As soon as a \"free\" argument (i.e. non-flag) is encountered, stop\nconsidering any remaining arguments as flags.",1,null],[4,"HasArg","","Describes whether an option has an argument.",null,null],[13,"Yes","","The option requires an argument.",2,null],[13,"No","","The option takes no argument.",2,null],[13,"Maybe","","The option argument is optional.",2,null],[4,"Occur","","Describes how often an option may occur.",null,null],[13,"Req","","The option occurs once.",3,null],[13,"Optional","","The option occurs at most once.",3,null],[13,"Multi","","The option occurs zero or more times.",3,null],[4,"Fail","","The type returned when the command line does not conform to the\nexpected format. Use the `Debug` implementation to output detailed\ninformation.",null,null],[13,"ArgumentMissing","","The option requires an argument but none was passed.",4,null],[13,"UnrecognizedOption","","The passed option is not declared among the possible options.",4,null],[13,"OptionMissing","","A required option is not present.",4,null],[13,"OptionDuplicated","","A single occurrence option is being used multiple times.",4,null],[13,"UnexpectedArgument","","There's an argument being passed to a non-argument option.",4,null],[4,"FailType","","The type of failure that occurred.",null,null],[13,"ArgumentMissing_","","",5,null],[13,"UnrecognizedOption_","","",5,null],[13,"OptionMissing_","","",5,null],[13,"OptionDuplicated_","","",5,null],[13,"UnexpectedArgument_","","",5,null],[6,"Result","","The result of parsing a command line with a set of options.",null,null],[11,"new","","Create a blank set of options.",6,{"inputs":[{"name":"options"}],"output":{"name":"options"}}],[11,"parsing_style","","Set the parsing style.",6,{"inputs":[{"name":"options"},{"name":"parsingstyle"}],"output":{"name":"options"}}],[11,"opt","","Create a generic option group, stating all parameters explicitly.",6,{"inputs":[{"name":"options"},{"name":"str"},{"name":"str"},{"name":"str"},{"name":"str"},{"name":"hasarg"},{"name":"occur"}],"output":{"name":"options"}}],[11,"optflag","","Create a long option that is optional and does not take an argument.",6,{"inputs":[{"name":"options"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"options"}}],[11,"optflagmulti","","Create a long option that can occur more than once and does not\ntake an argument.",6,{"inputs":[{"name":"options"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"options"}}],[11,"optflagopt","","Create a long option that is optional and takes an optional argument.",6,{"inputs":[{"name":"options"},{"name":"str"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"options"}}],[11,"optmulti","","Create a long option that is optional, takes an argument, and may occur\nmultiple times.",6,{"inputs":[{"name":"options"},{"name":"str"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"options"}}],[11,"optopt","","Create a long option that is optional and takes an argument.",6,{"inputs":[{"name":"options"},{"name":"str"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"options"}}],[11,"reqopt","","Create a long option that is required and takes an argument.",6,{"inputs":[{"name":"options"},{"name":"str"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"options"}}],[11,"parse","","Parse command line arguments according to the provided options.",6,{"inputs":[{"name":"options"},{"name":"c"}],"output":{"name":"result"}}],[11,"short_usage","","Derive a short one-line usage summary from a set of long options.",6,{"inputs":[{"name":"options"},{"name":"str"}],"output":{"name":"string"}}],[11,"usage","","Derive a usage message from a set of options.",6,{"inputs":[{"name":"options"},{"name":"str"}],"output":{"name":"string"}}],[11,"eq","","",1,{"inputs":[{"name":"parsingstyle"},{"name":"parsingstyle"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"parsingstyle"},{"name":"parsingstyle"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"parsingstyle"}],"output":{"name":"parsingstyle"}}],[11,"eq","","",2,{"inputs":[{"name":"hasarg"},{"name":"hasarg"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"hasarg"},{"name":"hasarg"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"hasarg"}],"output":{"name":"hasarg"}}],[11,"eq","","",3,{"inputs":[{"name":"occur"},{"name":"occur"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"occur"},{"name":"occur"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"occur"}],"output":{"name":"occur"}}],[11,"eq","","",0,{"inputs":[{"name":"matches"},{"name":"matches"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"matches"},{"name":"matches"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"eq","","",4,{"inputs":[{"name":"fail"},{"name":"fail"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"fail"},{"name":"fail"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"fail"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"fail"}],"output":{"name":"fail"}}],[11,"description","","",4,{"inputs":[{"name":"fail"}],"output":{"name":"str"}}],[11,"eq","","",5,{"inputs":[{"name":"failtype"},{"name":"failtype"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"failtype"},{"name":"failtype"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"failtype"}],"output":{"name":"failtype"}}],[11,"opt_present","","Returns true if an option was matched.",0,{"inputs":[{"name":"matches"},{"name":"str"}],"output":{"name":"bool"}}],[11,"opt_count","","Returns the number of times an option was matched.",0,{"inputs":[{"name":"matches"},{"name":"str"}],"output":{"name":"usize"}}],[11,"opts_present","","Returns true if any of several options were matched.",0,null],[11,"opts_str","","Returns the string argument supplied to one of several matching options or `None`.",0,null],[11,"opt_strs","","Returns a vector of the arguments provided to all matches of the given\noption.",0,{"inputs":[{"name":"matches"},{"name":"str"}],"output":{"name":"vec"}}],[11,"opt_str","","Returns the string argument supplied to a matching option or `None`.",0,{"inputs":[{"name":"matches"},{"name":"str"}],"output":{"name":"option"}}],[11,"opt_default","","Returns the matching string, a default, or `None`.",0,{"inputs":[{"name":"matches"},{"name":"str"},{"name":"str"}],"output":{"name":"option"}}],[11,"fmt","","",4,{"inputs":[{"name":"fail"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Matches"],[4,"ParsingStyle"],[4,"HasArg"],[4,"Occur"],[4,"Fail"],[4,"FailType"],[3,"Options"]]};
searchIndex['peresil'] = {"items":[[0,"","peresil","A simple and simplistic parsing library",null,null],[3,"Progress","","Tracks where the parser currently is and if it is successful.",null,null],[12,"point","","The current location.",0,null],[12,"status","","If the point indicates the location of a successful or failed parse.",0,null],[3,"ParseMaster","","The main entrypoint to parsing.",null,null],[3,"Alternate","","Follows the first successful parsing path.",null,null],[3,"StringPoint","","Tracks the location of parsing in a string, the most common case.",null,null],[12,"s","","The portion of the input string to start parsing next",1,null],[12,"offset","","How far into the original string we are",1,null],[4,"Status","","An analog to `Result`, specialized for parsing.",null,null],[13,"Success","","",2,null],[13,"Failure","","",2,null],[6,"Identifier","","Matches a literal string to a specific type, usually an enum.",null,null],[8,"Point","","A location in the parsed data",null,null],[10,"zero","","The initial point",3,{"inputs":[{"name":"point"}],"output":{"name":"self"}}],[8,"Recoverable","","Indicate if an error should terminate all parsing.",null,null],[10,"recoverable","","",4,{"inputs":[{"name":"recoverable"}],"output":{"name":"bool"}}],[11,"eq","","",2,{"inputs":[{"name":"status"},{"name":"status"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"status"},{"name":"status"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"status"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"progress"},{"name":"progress"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"progress"},{"name":"progress"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"progress"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"success","","",0,{"inputs":[{"name":"progress"},{"name":"p"},{"name":"t"}],"output":{"name":"progress"}}],[11,"failure","","",0,{"inputs":[{"name":"progress"},{"name":"p"},{"name":"e"}],"output":{"name":"progress"}}],[11,"map","","Convert the success value, if there is one.",0,{"inputs":[{"name":"progress"},{"name":"f"}],"output":{"name":"progress"}}],[11,"map_err","","Convert the failure value, if there is one.",0,{"inputs":[{"name":"progress"},{"name":"f"}],"output":{"name":"progress"}}],[11,"optional","","Returns the value on success, or rewinds the point and returns\n`None` on failure.",0,null],[11,"eq","","",5,{"inputs":[{"name":"parsemaster"},{"name":"parsemaster"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"parsemaster"},{"name":"parsemaster"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"parsemaster"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",5,{"inputs":[{"name":"parsemaster"}],"output":{"name":"parsemaster"}}],[11,"optional","","Returns the value on success, or rewinds the point and returns\n`None` on a recoverable failure. Non-recoverable failures are\npropagated.",5,{"inputs":[{"name":"parsemaster"},{"name":"p"},{"name":"f"}],"output":{"name":"progress"}}],[11,"alternate","","Run sub-parsers in order until one succeeds.",5,{"inputs":[{"name":"parsemaster"}],"output":{"name":"alternate"}}],[11,"zero_or_more","","Runs the parser until it fails.",5,{"inputs":[{"name":"parsemaster"},{"name":"p"},{"name":"f"}],"output":{"name":"progress"}}],[11,"finish","","When parsing is complete, provide the final result and gain\naccess to all failures.",5,{"inputs":[{"name":"parsemaster"},{"name":"progress"}],"output":{"name":"progress"}}],[11,"one","","Run one alternative parser.",6,{"inputs":[{"name":"alternate"},{"name":"f"}],"output":{"name":"alternate"}}],[11,"finish","","Complete the alternatives, returning the first successful branch.",6,{"inputs":[{"name":"alternate"}],"output":{"name":"progress"}}],[11,"eq","","",1,{"inputs":[{"name":"stringpoint"},{"name":"stringpoint"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"stringpoint"},{"name":"stringpoint"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"stringpoint"}],"output":{"name":"stringpoint"}}],[11,"fmt","","",1,{"inputs":[{"name":"stringpoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"stringpoint"},{"name":"stringpoint"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"stringpoint"},{"name":"stringpoint"}],"output":{"name":"ordering"}}],[11,"zero","","",1,{"inputs":[{"name":"stringpoint"}],"output":{"name":"stringpoint"}}],[11,"new","","",1,{"inputs":[{"name":"stringpoint"},{"name":"str"}],"output":{"name":"stringpoint"}}],[11,"to","","Slices the string.",1,{"inputs":[{"name":"stringpoint"},{"name":"stringpoint"}],"output":{"name":"str"}}],[11,"consume_to","","Advances the point by the number of bytes. If the value is\n`None`, then no value was able to be consumed, and the result\nis a failure.",1,{"inputs":[{"name":"stringpoint"},{"name":"option"}],"output":{"name":"progress"}}],[11,"consume_literal","","Advances the point if it starts with the literal.",1,{"inputs":[{"name":"stringpoint"},{"name":"str"}],"output":{"name":"progress"}}],[11,"consume_identifier","","Iterates through the identifiers and advances the point on the\nfirst matching identifier.",1,null],[14,"try_parse!","","An analog to `try!`, but for `Progress`",null,null]],"paths":[[3,"Progress"],[3,"StringPoint"],[4,"Status"],[8,"Point"],[8,"Recoverable"],[3,"ParseMaster"],[3,"Alternate"]]};
searchIndex['typed_arena'] = {"items":[[0,"","typed_arena","The arena, a fast but limited type of allocator.",null,null],[3,"Arena","","",null,null],[11,"new","","",0,{"inputs":[{"name":"arena"}],"output":{"name":"arena"}}],[11,"with_capacity","","",0,{"inputs":[{"name":"arena"},{"name":"usize"}],"output":{"name":"arena"}}],[11,"alloc","","",0,{"inputs":[{"name":"arena"},{"name":"t"}],"output":{"name":"t"}}]],"paths":[[3,"Arena"]]};
initSearch(searchIndex);
